no_fish　<- 10
scientific_name_vec <- vector()
genus_name_vec <- vector()
family_name_vec <- vector()
order_name_vec <- vector()
for(i in 1:no_fish){
target_fish <- FRA200List[i,1][[1]]
target_fish_ID <- which(JAFList$和名==target_fish)
scientific_name <- JAFList$学名[target_fish_ID]
Family <-JAFList$Family[target_fish_ID]
#	gsub("\n", " ", Family)
#	if(str_extract(Family, pattern="Epinephelidae")){
#	  Family <- "Epinephelidae"
#	}
if(!(identical(scientific_name,character(0)))){#if non-fish species
scientific_name_raw <- strsplit(scientific_name, " ") %>% unlist
#order_name_vec[i] <- Taxonomy_ID
genus_name <- scientific_name_raw[1]
family_name_vec[i] <- Family
genus_name_vec[i] <- genus_name
scientific_name_vec[i] <- scientific_name
#search order name
NIH_taxon_url <- paste0("https://www.ncbi.nlm.nih.gov/genome/?term=",genus_name)
NIH_taxon_html <- read_html(NIH_taxon_url)
taxon_info <- NIH_taxon_html %>%
html_element(xpath = '//*[@id="kis-taxon"]/div/div/p[2]') %>%
html_text() %>% unlist
Taxonomy_ID <- taxon_info[length(taxon_info)]
genus_name_vec[i] <- Taxonomy_ID
Sys.sleep(1)
}else{
order_name_vec[i] <- NA
genus_name_vec[i] <- NA
family_name_vec[i] <- NA
scientific_name_vec[i] <- NA
}
}
#FRA200List_Latin <- FRA200List %>%
#  mutate(Family = Family_vec, Scientific_name = scientific_name_vec) %>%
#  arrange(Category, Family, Scientific_name)
#write_csv(FRA200List_Latin, "FRA200List_Latin.csv")
genus_name_vec
# Loading packages
library(tidyverse)
library(rvest)
# Current standard Japanese/scientific names of all fish species recorded from Japanese waters
#https://www.museum.kagoshima-u.ac.jp/staff/motomura/jaf.html
JAFList <- read_csv("20220821_JAFList.csv")
# Species list of fisheries resources
FRA200List <- read_csv("FRA200List.csv")
FRA200List$Category <- factor(FRA200List$Category, levels=c("Fish","Shellfish","Cuttlefish"))
no_fish <- nrow(FRA200List)
no_fish　<- 10
scientific_name_vec <- vector()
genus_name_vec <- vector()
family_name_vec <- vector()
order_name_vec <- vector()
for(i in 1:no_fish){
target_fish <- FRA200List[i,1][[1]]
target_fish_ID <- which(JAFList$和名==target_fish)
scientific_name <- JAFList$学名[target_fish_ID]
Family <-JAFList$Family[target_fish_ID]
#	gsub("\n", " ", Family)
#	if(str_extract(Family, pattern="Epinephelidae")){
#	  Family <- "Epinephelidae"
#	}
if(!(identical(scientific_name,character(0)))){#if non-fish species
scientific_name_raw <- strsplit(scientific_name, " ") %>% unlist
#order_name_vec[i] <- Taxonomy_ID
genus_name <- scientific_name_raw[1]
family_name_vec[i] <- Family
genus_name_vec[i] <- genus_name
scientific_name_vec[i] <- scientific_name
#search order name
NIH_taxon_url <- paste0("https://www.ncbi.nlm.nih.gov/genome/?term=",genus_name)
NIH_taxon_html <- read_html(NIH_taxon_url)
taxon_info <- NIH_taxon_html %>%
html_element(xpath = '//*[@id="kis-taxon"]/div/div/p[2]') %>%
html_text() %>% strsplit(" ") %>% unlist
Taxonomy_ID <- taxon_info[length(taxon_info)]
genus_name_vec[i] <- Taxonomy_ID
Sys.sleep(1)
}else{
order_name_vec[i] <- NA
genus_name_vec[i] <- NA
family_name_vec[i] <- NA
scientific_name_vec[i] <- NA
}
}
#FRA200List_Latin <- FRA200List %>%
#  mutate(Family = Family_vec, Scientific_name = scientific_name_vec) %>%
#  arrange(Category, Family, Scientific_name)
#write_csv(FRA200List_Latin, "FRA200List_Latin.csv")
genus_name_vec
# Loading packages
library(tidyverse)
library(rvest)
# Current standard Japanese/scientific names of all fish species recorded from Japanese waters
#https://www.museum.kagoshima-u.ac.jp/staff/motomura/jaf.html
JAFList <- read_csv("20220821_JAFList.csv")
# Species list of fisheries resources
FRA200List <- read_csv("FRA200List.csv")
FRA200List$Category <- factor(FRA200List$Category, levels=c("Fish","Shellfish","Cuttlefish"))
no_fish <- nrow(FRA200List)
#no_fish　<- 10
scientific_name_vec <- vector()
genus_name_vec <- vector()
family_name_vec <- vector()
order_name_vec <- vector()
for(i in 1:no_fish){
target_fish <- FRA200List[i,1][[1]]
target_fish_ID <- which(JAFList$和名==target_fish)
scientific_name <- JAFList$学名[target_fish_ID]
Family <-JAFList$Family[target_fish_ID]
#	gsub("\n", " ", Family)
#	if(str_extract(Family, pattern="Epinephelidae")){
#	  Family <- "Epinephelidae"
#	}
if(!(identical(scientific_name,character(0)))){#if non-fish species
family_name_vec[i] <- Family
scientific_name_vec[i] <- scientific_name
}else{
family_name_vec[i] <- NA
scientific_name_vec[i] <- NA
}
}
FRA200List_Latin <- FRA200List %>%
mutate(Family = Family_vec, Scientific_name = scientific_name_vec) %>%
arrange(Category, Family, Scientific_name)
# Loading packages
library(tidyverse)
library(rvest)
# Current standard Japanese/scientific names of all fish species recorded from Japanese waters
#https://www.museum.kagoshima-u.ac.jp/staff/motomura/jaf.html
JAFList <- read_csv("20220821_JAFList.csv")
# Species list of fisheries resources
FRA200List <- read_csv("FRA200List.csv")
FRA200List$Category <- factor(FRA200List$Category, levels=c("Fish","Shellfish","Cuttlefish"))
no_fish <- nrow(FRA200List)
#no_fish　<- 10
scientific_name_vec <- vector()
genus_name_vec <- vector()
family_name_vec <- vector()
order_name_vec <- vector()
for(i in 1:no_fish){
target_fish <- FRA200List[i,1][[1]]
target_fish_ID <- which(JAFList$和名==target_fish)
scientific_name <- JAFList$学名[target_fish_ID]
Family <-JAFList$Family[target_fish_ID]
#	gsub("\n", " ", Family)
#	if(str_extract(Family, pattern="Epinephelidae")){
#	  Family <- "Epinephelidae"
#	}
if(!(identical(scientific_name,character(0)))){#if non-fish species
family_name_vec[i] <- Family
scientific_name_vec[i] <- scientific_name
}else{
family_name_vec[i] <- NA
scientific_name_vec[i] <- NA
}
}
FRA200List_Latin <- FRA200List %>%
mutate(Family = family_name_vec, Scientific_name = scientific_name_vec) %>%
arrange(Category, Family, Scientific_name)
#write_csv(FRA200List_Latin, "FRA200List_Latin.csv")
# Loading packages
library(tidyverse)
library(rvest)
# Current standard Japanese/scientific names of all fish species recorded from Japanese waters
#https://www.museum.kagoshima-u.ac.jp/staff/motomura/jaf.html
JAFList <- read_csv("20220821_JAFList.csv")
# Species list of fisheries resources
FRA200List <- read_csv("FRA200List.csv")
FRA200List$Category <- factor(FRA200List$Category, levels=c("Fish","Shellfish","Cuttlefish"))
no_fish <- nrow(FRA200List)
#no_fish　<- 10
scientific_name_vec <- vector()
genus_name_vec <- vector()
family_name_vec <- vector()
order_name_vec <- vector()
for(i in 1:no_fish){
target_fish <- FRA200List[i,1][[1]]
target_fish_ID <- which(JAFList$和名==target_fish)
scientific_name <- JAFList$学名[target_fish_ID]
Family <-JAFList$Family[target_fish_ID]
#	gsub("\n", " ", Family)
#	if(str_extract(Family, pattern="Epinephelidae")){
#	  Family <- "Epinephelidae"
#	}
if(!(identical(scientific_name,character(0)))){#if non-fish species
family_name_vec[i] <- Family
scientific_name_vec[i] <- scientific_name
}else{
family_name_vec[i] <- NA
scientific_name_vec[i] <- NA
}
}
FRA200List_Latin <- FRA200List %>%
mutate(Family = family_name_vec, Scientific_name = scientific_name_vec) %>%
arrange(Category, Family, Scientific_name)
write_csv(FRA200List_Latin, "FRA200List_Latin.csv")
# Loading packages
library(tidyverse)
library(rvest)
# Current standard Japanese/scientific names of all fish species recorded from Japanese waters
#https://www.museum.kagoshima-u.ac.jp/staff/motomura/jaf.html
JAFList <- read_csv("20220821_JAFList.csv")
# Species list of fisheries resources
FRA200List <- read_csv("FRA200List.csv")
FRA200List$Category <- factor(FRA200List$Category, levels=c("Fish","Shellfish","Cuttlefish"))
no_fish <- nrow(FRA200List)
#no_fish　<- 10
scientific_name_vec <- vector()
genus_name_vec <- vector()
family_name_vec <- vector()
order_name_vec <- vector()
for(i in 1:no_fish){
target_fish <- FRA200List[i,1][[1]]
target_fish_ID <- which(JAFList$和名==target_fish)
scientific_name <- JAFList$学名[target_fish_ID]
Family <-JAFList$Family[target_fish_ID]
#	gsub("\n", " ", Family)
#	if(str_extract(Family, pattern="Epinephelidae")){
#	  Family <- "Epinephelidae"
#	}
if(!(identical(scientific_name,character(0)))){#if non-fish species
family_name_vec[i] <- Family
scientific_name_vec[i] <- scientific_name
}else{
family_name_vec[i] <- NA
scientific_name_vec[i] <- NA
}
}
FRA200List_Latin <- FRA200List %>%
mutate(Family = family_name_vec, Scientific_name = scientific_name_vec) %>%
arrange(Category, Family, Scientific_name)
write_csv(FRA200List_Latin, "FRA200List_Latin.csv")
# Loading packages
library(tidyverse)
library(rvest)
# Current standard Japanese/scientific names of all fish species recorded from Japanese waters
#https://www.museum.kagoshima-u.ac.jp/staff/motomura/jaf.html
JAFList <- read_csv("20220821_JAFList.csv")
# Species list of fisheries resources
FRA200List <- read_csv("FRA200List.csv")
FRA200List$Category <- factor(FRA200List$Category, levels=c("Fish","Shellfish","Cuttlefish"))
no_fish <- nrow(FRA200List)
#no_fish　<- 10
scientific_name_vec <- vector()
genus_name_vec <- vector()
family_name_vec <- vector()
order_name_vec <- vector()
for(i in 1:no_fish){
target_fish <- FRA200List[i,1][[1]]
target_fish_ID <- which(JAFList$和名==target_fish)
scientific_name <- JAFList$学名[target_fish_ID]
Family <-JAFList$Family[target_fish_ID]
#	gsub("\n", " ", Family)
#	if(str_extract(Family, pattern="Epinephelidae")){
#	  Family <- "Epinephelidae"
#	}
if(!(identical(scientific_name,character(0)))){#if non-fish species
family_name_vec[i] <- Family
scientific_name_vec[i] <- scientific_name
}else{
family_name_vec[i] <- NA
scientific_name_vec[i] <- NA
}
}
FRA200List_Latin <- FRA200List %>%
mutate(Family = family_name_vec, Scientific_name = scientific_name_vec) %>%
arrange(Category, Family, Scientific_name)
write_csv(FRA200List_Latin, "FRA200List_Latin.csv")
aa <- '"And who was the first?" I asked.\n"A fellow who is'
aa
print(aa)
aa <- "And who was the first?" I asked.\nA fellow who is""
aa <- "And who was the first? I asked.\nA fellow who is
""
aa <- "And who was the first? I asked.\nA fellow who is"
aa <- "And who was the first? I asked.\nA fellow who is"
aa <- 'And who was the first? I asked.\nA fellow who is'
aa
aa <- "And who was the first? I asked.\n"
aa
aa <- '"And who was the first? I asked.\n"'
aa
JAFList$Family[2508]
JAFList$Family[2608]
JAFList$Family[2089]
test_w <- JAFList$Family[2089]
strsplit(test_w, \n)
strsplit(test_w, "\n)
strsplit(test_w, "\n")
strsplit("Epinephelidae", "\n")
strsplit(test_w, "\n")　%>% unlist
strsplit(test_w, "\n")　%>% unlist[1]
strsplit(test_w, "\n")　%>% unlist %>% [1]
strsplit(test_w, "\n")　%>% unlist
aa <- strsplit(test_w, "\n")　%>% unlist
aa
aa[1]
aa[2]
# Loading packages
library(tidyverse)
library(rvest)
# Current standard Japanese/scientific names of all fish species recorded from Japanese waters
#https://www.museum.kagoshima-u.ac.jp/staff/motomura/jaf.html
JAFList <- read_csv("20220821_JAFList.csv")
# Species list of fisheries resources
FRA200List <- read_csv("FRA200List.csv")
FRA200List$Category <- factor(FRA200List$Category, levels=c("Fish","Shellfish","Cuttlefish"))
no_fish <- nrow(FRA200List)
#no_fish　<- 10
scientific_name_vec <- vector()
genus_name_vec <- vector()
family_name_vec <- vector()
order_name_vec <- vector()
for(i in 1:no_fish){
target_fish <- FRA200List[i,1][[1]]
target_fish_ID <- which(JAFList$和名==target_fish)
scientific_name <- JAFList$学名[target_fish_ID]
Family_unlist <-JAFList$Family[target_fish_ID] %>% unlist
Family_name <- Family_unlist[1]
if(!(identical(scientific_name,character(0)))){#if non-fish species
family_name_vec[i] <- Family_name
scientific_name_vec[i] <- scientific_name
}else{
family_name_vec[i] <- NA
scientific_name_vec[i] <- NA
}
}
FRA200List_Latin <- FRA200List %>%
mutate(Family = family_name_vec, Scientific_name = scientific_name_vec) %>%
arrange(Category, Family, Scientific_name)
write_csv(FRA200List_Latin, "FRA200List_Latin.csv")
# Loading packages
library(tidyverse)
library(rvest)
# Current standard Japanese/scientific names of all fish species recorded from Japanese waters
#https://www.museum.kagoshima-u.ac.jp/staff/motomura/jaf.html
JAFList <- read_csv("20220821_JAFList.csv")
# Species list of fisheries resources
FRA200List <- read_csv("FRA200List.csv")
FRA200List$Category <- factor(FRA200List$Category, levels=c("Fish","Shellfish","Cuttlefish"))
no_fish <- nrow(FRA200List)
#no_fish　<- 10
scientific_name_vec <- vector()
genus_name_vec <- vector()
family_name_vec <- vector()
order_name_vec <- vector()
for(i in 1:no_fish){
target_fish <- FRA200List[i,1][[1]]
target_fish_ID <- which(JAFList$和名==target_fish)
scientific_name <- JAFList$学名[target_fish_ID]
Family_unlist <-JAFList$Family[target_fish_ID] %>% unlist
Family_name <- Family_unlist[1]
if(!(identical(scientific_name,character(0)))){#if non-fish species
family_name_vec[i] <- Family_name
scientific_name_vec[i] <- scientific_name
}else{
family_name_vec[i] <- NA
scientific_name_vec[i] <- NA
}
}
FRA200List_Latin <- FRA200List %>%
mutate(Family = family_name_vec, Scientific_name = scientific_name_vec) %>%
arrange(Category, Family, Scientific_name)
write_csv(FRA200List_Latin, "FRA200List_Latin.csv")
test_w <- JAFList$Family[2089]
test_w
test_w <- JAFList$Family[2093]
test_w
# Loading packages
library(tidyverse)
library(rvest)
# Current standard Japanese/scientific names of all fish species recorded from Japanese waters
#https://www.museum.kagoshima-u.ac.jp/staff/motomura/jaf.html
JAFList <- read_csv("20220821_JAFList.csv")
# Species list of fisheries resources
FRA200List <- read_csv("FRA200List.csv")
FRA200List$Category <- factor(FRA200List$Category, levels=c("Fish","Shellfish","Cuttlefish"))
no_fish <- nrow(FRA200List)
#no_fish　<- 10
scientific_name_vec <- vector()
genus_name_vec <- vector()
family_name_vec <- vector()
order_name_vec <- vector()
for(i in 1:no_fish){
target_fish <- FRA200List[i,1][[1]]
target_fish_ID <- which(JAFList$和名==target_fish)
scientific_name <- JAFList$学名[target_fish_ID]
Family_unlist <-JAFList$Family[target_fish_ID] %>% strsplit("\n") %>% unlist
Family_name <- Family_unlist[1]
if(!(identical(scientific_name,character(0)))){#if non-fish species
family_name_vec[i] <- Family_name
scientific_name_vec[i] <- scientific_name
}else{
family_name_vec[i] <- NA
scientific_name_vec[i] <- NA
}
}
FRA200List_Latin <- FRA200List %>%
mutate(Family = family_name_vec, Scientific_name = scientific_name_vec) %>%
arrange(Category, Family, Scientific_name)
write_csv(FRA200List_Latin, "FRA200List_Latin.csv")
# Loading packages
library(tidyverse)
library(rvest)
# Current standard Japanese/scientific names of all fish species recorded from Japanese waters
#https://www.museum.kagoshima-u.ac.jp/staff/motomura/jaf.html
JAFList <- read_csv("20220821_JAFList.csv")
# Species list of fisheries resources
FRA200List <- read_csv("FRA200List.csv")
FRA200List$Category <- factor(FRA200List$Category, levels=c("Fish","Shellfish","Cuttlefish"))
no_fish <- nrow(FRA200List)
#no_fish　<- 10
scientific_name_vec <- vector()
genus_name_vec <- vector()
family_name_vec <- vector()
order_name_vec <- vector()
for(i in 1:no_fish){
target_fish <- FRA200List[i,1][[1]]
target_fish_ID <- which(JAFList$和名==target_fish)
scientific_unlist <- JAFList$学名[target_fish_ID] %>% strsplit("\n") %>% unlist
scientific_name <- scientific_unlist[1]
Family_unlist <-JAFList$Family[target_fish_ID] %>% strsplit("\n") %>% unlist
Family_name <- Family_unlist[1]
if(!(identical(scientific_name,character(0)))){#if non-fish species
family_name_vec[i] <- Family_name
scientific_name_vec[i] <- scientific_name
}else{
family_name_vec[i] <- NA
scientific_name_vec[i] <- NA
}
}
JAFList$学名[3633]
strsplit(JAFList$学名[3633], "\n")
strsplit(JAFList$学名[3633], "\n") %>% unlist
aaa <- strsplit(JAFList$学名[3633], "\n") %>% unlist
aaa[1]
aaa[2]
# Loading packages
library(tidyverse)
library(rvest)
# Current standard Japanese/scientific names of all fish species recorded from Japanese waters
#https://www.museum.kagoshima-u.ac.jp/staff/motomura/jaf.html
JAFList <- read_csv("20220821_JAFList.csv")
# Species list of fisheries resources
FRA200List <- read_csv("FRA200List.csv")
FRA200List$Category <- factor(FRA200List$Category, levels=c("Fish","Shellfish","Cuttlefish"))
no_fish <- nrow(FRA200List)
#no_fish　<- 10
scientific_name_vec <- vector()
genus_name_vec <- vector()
family_name_vec <- vector()
order_name_vec <- vector()
for(i in 1:no_fish){
target_fish <- FRA200List[i,1][[1]]
target_fish_ID <- which(JAFList$和名==target_fish)
scientific_name_check <- JAFList$学名[target_fish_ID]
Family_unlist <-JAFList$Family[target_fish_ID] %>% strsplit("\n") %>% unlist
Family_name <- Family_unlist[1]
if(!(identical(scientific_name_check,character(0)))){#if non-fish species
scientific_unlist <- scientific_name_check %>% strsplit("\n") %>% unlist
scientific_name <- scientific_unlist[1]
family_name_vec[i] <- Family_name
scientific_name_vec[i] <- scientific_name
}else{
family_name_vec[i] <- NA
scientific_name_vec[i] <- NA
}
}
FRA200List_Latin <- FRA200List %>%
mutate(Family = family_name_vec, Scientific_name = scientific_name_vec) %>%
arrange(Category, Family, Scientific_name)
write_csv(FRA200List_Latin, "FRA200List_Latin.csv")
# Loading packages
library(tidyverse)
library(rvest)
# Current standard Japanese/scientific names of all fish species recorded from Japanese waters
#https://www.museum.kagoshima-u.ac.jp/staff/motomura/jaf.html
JAFList <- read_csv("20220821_JAFList.csv")
# Species list of fisheries resources
FRA200List <- read_csv("FRA200List.csv")
FRA200List$Category <- factor(FRA200List$Category, levels=c("Fish","Shellfish","Cuttlefish"))
no_fish <- nrow(FRA200List)
#no_fish　<- 10
scientific_name_vec <- vector()
genus_name_vec <- vector()
family_name_vec <- vector()
order_name_vec <- vector()
for(i in 1:no_fish){
target_fish <- FRA200List[i,1][[1]]
target_fish_ID <- which(JAFList$和名==target_fish)
scientific_name_check <- JAFList$学名[target_fish_ID]
Family_unlist <-JAFList$Family[target_fish_ID] %>% strsplit("\n") %>% unlist
Family_name <- Family_unlist[1]
if(!(identical(scientific_name_check,character(0)))){#if non-fish species
scientific_unlist <- scientific_name_check %>% strsplit("\n") %>% unlist
scientific_name <- scientific_unlist[1]
family_name_vec[i] <- Family_name
scientific_name_vec[i] <- scientific_name
}else{
family_name_vec[i] <- NA
scientific_name_vec[i] <- NA
}
}
FRA200List_Latin <- FRA200List %>%
mutate(Family = family_name_vec, Scientific_name = scientific_name_vec) %>%
arrange(Category, Family, Scientific_name)
write_csv(FRA200List_Latin, "FRA200List_Latin.csv")
